#START-FILE-LIST
# File List auto generated by waf2cmake.py, do not modify manually.

start_sources()
# -- smpeg.waf_files --
sources_platform(ALL)
add_sources("NoUberFile"
	SOURCE_GROUP "Root"
		"${SDK_DIR}/smpeg/audio/bitwindow.cpp"
		"${SDK_DIR}/smpeg/video/decoders.cpp"
		"${SDK_DIR}/smpeg/video/decoders.h"
		"${SDK_DIR}/smpeg/video/dither.h"
		"${SDK_DIR}/smpeg/audio/filter.cpp"
		"${SDK_DIR}/smpeg/audio/filter_2.cpp"
		"${SDK_DIR}/smpeg/video/floatdct.cpp"
		"${SDK_DIR}/smpeg/video/gdith.cpp"
		"${SDK_DIR}/smpeg/audio/hufftable.cpp"
		"${SDK_DIR}/smpeg/video/jrevdct.cpp"
		"${SDK_DIR}/smpeg/video/motionvec.cpp"
		"${SDK_DIR}/smpeg/MPEG.cpp"
		"${SDK_DIR}/smpeg/MPEG.h"
		"${SDK_DIR}/smpeg/MPEGaction.h"
		"${SDK_DIR}/smpeg/audio/MPEGaudio.cpp"
		"${SDK_DIR}/smpeg/MPEGaudio.h"
		"${SDK_DIR}/smpeg/MPEGerror.h"
		"${SDK_DIR}/smpeg/audio/mpeglayer1.cpp"
		"${SDK_DIR}/smpeg/audio/mpeglayer2.cpp"
		"${SDK_DIR}/smpeg/audio/mpeglayer3.cpp"
		"${SDK_DIR}/smpeg/MPEGlist.cpp"
		"${SDK_DIR}/smpeg/MPEGlist.h"
		"${SDK_DIR}/smpeg/MPEGring.cpp"
		"${SDK_DIR}/smpeg/MPEGring.h"
		"${SDK_DIR}/smpeg/MPEGstream.cpp"
		"${SDK_DIR}/smpeg/MPEGstream.h"
		"${SDK_DIR}/smpeg/MPEGsystem.cpp"
		"${SDK_DIR}/smpeg/MPEGsystem.h"
		"${SDK_DIR}/smpeg/audio/mpegtable.cpp"
		"${SDK_DIR}/smpeg/audio/mpegtoraw.cpp"
		"${SDK_DIR}/smpeg/video/MPEGvideo.cpp"
		"${SDK_DIR}/smpeg/MPEGvideo.h"
		"${SDK_DIR}/smpeg/video/parseblock.cpp"
		"${SDK_DIR}/smpeg/video/proto.h"
		"${SDK_DIR}/smpeg/video/readfile.cpp"
		"${SDK_DIR}/smpeg/smpeg.cpp"
		"${SDK_DIR}/smpeg/smpeg.h"
		"${SDK_DIR}/smpeg/video/util.cpp"
		"${SDK_DIR}/smpeg/video/util.h"
		"${SDK_DIR}/smpeg/video/video.cpp"
		"${SDK_DIR}/smpeg/video/video.h"
)

end_sources()
#END-FILE-LIST

####################### smpeg #######################
CreateDynamicModule(smpeg SOLUTION_FOLDER "Libs/Audio")
target_include_directories(${THIS_PROJECT} PUBLIC "${SDK_DIR}/smpeg")
target_compile_definitions(${THIS_PROJECT} PRIVATE
	-DNOCONTROLS
	-DTHREADED_AUDIO
)
target_link_libraries(${THIS_PROJECT} PRIVATE SDL2)
set_property(TARGET ${THIS_PROJECT} PROPERTY OUTPUT_NAME "smpeg2")

if(WINDOWS)
	target_link_libraries(${THIS_PROJECT} PRIVATE
		kernel32
		user32
		gdi32
		winspool
		comdlg32
		advapi32
		shell32
		ole32
		oleaut32
		uuid
	)

	target_compile_definitions(${THIS_PROJECT} PRIVATE
		-D_WINDOWS
		-DWIN32
	)
	target_compile_options(${THIS_PROJECT} PRIVATE
		/W0
		/FImemory    # Force include needed for memset() in MPEGaudio.cpp around line 43, remove this once they fixed it in their code base.
	)
elseif(LINUX)
	target_compile_options(${THIS_PROJECT} PRIVATE -w)
elseif(ANDROID)
	target_compile_options(${THIS_PROJECT} PRIVATE -w)
	target_link_libraries(${THIS_PROJECT} PRIVATE m)
endif()

if (ORBIS OR CMAKE_CXX_COMPILER_ID STREQUAL "Clang")
	target_compile_options(${THIS_PROJECT} PRIVATE
		-Wno-c++11-narrowing
	)
endif()
